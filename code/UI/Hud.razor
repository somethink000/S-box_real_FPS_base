@using System
@using System.Linq
@using Sandbox;
@inherits PanelComponent
@namespace GeneralGame

@if ( !LocalPlayer.IsValid() ) return;

<root>
	@{
		var weapon = LocalPlayer.Weapons.Deployed;

		BaseGun bsGun = null;
	}

	@if (weapon.IsValid() && weapon.Components.GetInDescendantsOrSelf<BaseGun>(true).IsValid())
	{
		bsGun = weapon.Components.GetInDescendantsOrSelf<BaseGun>();
	}


	@if (bsGun.IsValid() && LocalPlayer.LifeState == LifeState.Alive)
	{

		<div class="ammo">
			@{
				var totalAmmo = LocalPlayer.Ammo.Get(bsGun.AmmoType);
			}
			<label class="clip">@bsGun.AmmoInClip</label>/<label class="total">@totalAmmo</label>
		</div>
	}
	
	<div class="center">
		@* <div class="crosshair"></div> *@
		@if (weapon.IsValid() && !LocalPlayer.IsAiming)
		{
			<div class="crosshair"></div>
		}
	</div>
</root>

@code
{
	private PlayerController LocalPlayer { get; set; }
	
	protected override void OnFixedUpdate()
	{
		if ( !LocalPlayer.IsValid() )
		{
			LocalPlayer = Scene.GetAllComponents<PlayerController>().FirstOrDefault( p => p.Network.OwnerConnection == Connection.Local );
		}
	}

	
	protected override int BuildHash() => HashCode.Combine( RealTime.Now );
}
